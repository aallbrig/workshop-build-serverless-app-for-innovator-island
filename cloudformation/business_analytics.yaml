AWSTemplateFormatVersion: "2010-09-09"
Description: Business Analytics

Parameters:
  AnalyticsBucketName:
    Description: Name of Analytics Bucket
    Type: String
    Default: "business-analytics-bucket"


Resources:
  AnalyticsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AnalyticsBucketName}-${AWS::AccountId}"

  DataFirehoseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
            Action:
              - sts:AssumeRole
        Policies:
          - PolicyName: FirehoseAccessPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Sid: ""
                  Effect: "Allow"
                  Action:
                    - "glue:GetTable"
                    - "glue:GetTableVersion"
                    - "glue:GetTableVersions"
                  Resource:
                    - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog"
                    - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%"
                    - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%"
                - Sid: ""
                  Effect: "Allow"
                  Action:
                    - "glue:GetSchemaByDefinition"
                  Resource:
                    - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:registry/*"
                    - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:schema/*"
                - Sid: ""
                  Effect: "Allow"
                  Action:
                    - "glue:GetSchemaVersion"
                  Resource:
                    - "*"
                - Sid: ""
                  Effect: "Allow"
                  Action:
                    - "s3:AbortMultipartUpload"
                    - "s3:GetBucketLocation"
                    - "s3:GetObject"
                    - "s3:ListBucket"
                    - "s3:ListBucketMultipartUploads"
                    - "s3:PutObject"
                  Resource:
                    - !Sub "arn:aws:s3:::${AnalyticsBucketName}"
                    - !Sub "arn:aws:s3:::${AnalyticsBucketName}/*"
                - Sid: ""
                  Effect: "Allow"
                  Action:
                    - "lambda:InvokeFunction"
                    - "lambda:GetFunctionConfiguration"
                  Resource: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%"
                - Sid: ""
                  Effect: "Allow"
                  Action:
                    - "kms:GenerateDataKey"
                    - "kms:Decrypt"
                  Resource: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%"
                  Condition:
                    StringEquals:
                      "kms:ViaService": "s3.${AWS::Region}.amazonaws.com"
                    StringLike:
                      "kms:EncryptionContext:aws:s3:arn":
                        - "arn:aws:s3:::%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%/*"
                        - "arn:aws:s3:::%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%"
                - Sid: ""
                  Effect: "Allow"
                  Action:
                    - "logs:PutLogEvents"
                  Resource:
                    - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/TEST_PUT-S3-3cTHE:log-stream:*"
                    - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%:log-stream:*"
                - Sid: ""
                  Effect: "Allow"
                  Action:
                    - "kinesis:DescribeStream"
                    - "kinesis:GetShardIterator"
                    - "kinesis:GetRecords"
                    - "kinesis:ListShards"
                  Resource: "arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%"
                - Effect: "Allow"
                  Action:
                    - "kms:Decrypt"
                  Resource:
                    - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%"
                  Condition:
                    StringEquals:
                      "kms:ViaService": "kinesis.${AWS::Region}.amazonaws.com"
                    StringLike:
                      "kms:EncryptionContext:aws:kinesis:arn": "arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%"

  DataFirehoseDelivery:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Sub "${AWS::StackName}-data-firehose"
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        BucketARN: !GetAtt AnalyticsBucket.Arn
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 50
        CompressionFormat: UNCOMPRESSED
        Prefix: data/
        RoleARN: !GetAtt DataFirehoseRole.Arn
        ErrorOutputPrefix: errors/
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Sub "${AWS::StackName}-data-firehose"
          LogStreamName: !Sub "${AWS::StackName}-data-firehose"
        S3BackupMode: Disabled